{"version":3,"sources":["components/game_options/game_options.module.css","components/login/login.module.css","components/webcam_box/webcam_box.module.css","components/image_box/image_box.module.css","components/webcam_controller/webcam_controller.module.css","components/message_box/message_box.module.css","components/header/header.module.css","app.module.css","components/board/board.module.css","components/game_box/game_box.module.css","components/header/header.jsx","components/login/login.jsx","common/constants.js","components/message_box/message_box.jsx","components/image_box/image_box.jsx","common/template.js","components/webcam_controller/webcam_controller.jsx","components/webcam_box/webcam_box.jsx","images/rummikub.png","images/drawnguess.png","images/shellshockers.png","components/game_options/game_options.jsx","components/game_box/game_box.jsx","components/board/board.jsx","app.jsx","service/firebase.js","service/auth_service.js","service/database.js","service/image_uploader.js","index.js"],"names":["module","exports","Header","authService","navigate","useNavigate","className","styles","header","headerText","logoutBtn","onClick","logout","then","Login","onLogin","e","login","target","dataset","provider","result","state","id","user","uid","loginBox","loginTitle","loginBtns","loginBtn","loginIcon","MESSAGE_BOX","IMAGE_BOX","WEBCAM_BOX","gameLinks","RUMMIKUB","DRAWANDGUESS","SHELLSHOCKERS","cursorStyle","Meta","meta","Alt","alt","MessageBox","pressedKey","message","onMessageClick","onMessageChange","inputRef","useRef","nodeRef","useState","itemType","mouseEnter","setMouseEnter","dragging","setDragging","useEffect","current","style","height","scrollHeight","axis","bounds","position","x","y","scale","onStart","onStop","data","ref","input","autoCursor","type","value","text","maxLength","top","left","onInput","onMouseEnter","onMouseLeave","onKeyDown","stopPropagation","onKeyPress","ImageBox","img","onImageClick","onImageChange","imgRef","imgWrapper","src","fileUrl","draggable","itemTemplate","userId","width","playing","GAME_BOX","game","WebcamController","camOn","changeCamState","webcamController","showWebcamController","hideWebcamController","switch","slider","round","WebcamBox","webcam","onWebcamClick","onWebcamChange","deviceId","setDeviceId","setCamOn","handleWebcamChange","navigator","mediaDevices","enumerateDevices","handleDevice","isPlaying","forEach","kind","console","log","webcamAbsolute","webcamRelative","mirrored","screenshotQuality","audio","videoConstraints","GameOptions","getSelectedGame","modal","dialog","options","gameTitle","gameImg","imgRummikub","imgDrawnGuess","imgShellShockers","GameBox","onGameChange","iframeRef","setModal","gameBox","selectedGame","Board","database","imageUploader","dndZoneRef","location","useLocation","currKey","setCurrKey","setUserId","messages","setMessages","images","setImages","setWebcam","games","setGames","stopSync","onAuthChange","getMessage","getImages","getWebcam","getGames","handleDragEnter","useCallback","preventDefault","handleDragLeave","handleDragOver","handleDrop","addImageBox","dataTransfer","files","clientX","clientY","setEventListeners","addEventListener","window","changeCurrKey","removeEventListeners","removeEventListener","key","handleBoardClick","clickEvent","addMessageBox","addWebcamBox","addGameBox","removeMessageBox","removeImageBox","removeWebcamBox","Date","now","rect","getBoundingClientRect","template","updated","saveMessage","messageId","removeMessage","updateMessageBox","deltaX","deltaY","changedMessage","file","a","upload","uploaded","url","saveImage","error","imageId","removeImage","updateImageBox","updatedImage","Object","keys","length","alert","saveWebcam","webcamId","removeWebcam","updateWebcam","updatedWebcam","saveGame","updateGame","gameId","updatedGame","removeGame","board","map","App","appContainer","basename","process","path","element","loginComponent","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","AuthService","this","auth","getAuth","providerName","authProvider","getProvider","signInWithPopup","signOut","onUserChange","onAuthStateChanged","GoogleAuthProvider","GithubAuthProvider","Error","Database","db","getDatabase","set","image","onUpdate","onValue","snapshot","val","remove","ImageId","ImageUploader","cloudName","presetName","FormData","append","fetch","method","body","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc048ff8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryWhite\":\"white\",\"modal\":\"game_options_modal__Pf9bD\",\"dialog\":\"game_options_dialog__1J6wU\",\"options\":\"game_options_options__53T7C\",\"game\":\"game_options_game__2o-nv\",\"gameTitle\":\"game_options_gameTitle__XbdLj\",\"gameImg\":\"game_options_gameImg__3NvSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryWhite\":\"white\",\"primaryBlack\":\"black\",\"loginBox\":\"login_loginBox__3NKqg\",\"loginTitle\":\"login_loginTitle__2UScx\",\"loginBtns\":\"login_loginBtns__3ySJu\",\"loginBtn\":\"login_loginBtn__3EY9k\",\"loginIcon\":\"login_loginIcon__3NJdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"webcamAbsolute\":\"webcam_box_webcamAbsolute__3JGVW\",\"webcamRelative\":\"webcam_box_webcamRelative__1mBUX\",\"webcam\":\"webcam_box_webcam__1VGEp\",\"meta\":\"webcam_box_meta__CgNXA\",\"alt\":\"webcam_box_alt__1iik2\",\"dragging\":\"webcam_box_dragging__1eg5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgWrapper\":\"image_box_imgWrapper__xRCsR\",\"img\":\"image_box_img__2FZW8\",\"meta\":\"image_box_meta__3Q5W1\",\"alt\":\"image_box_alt__1F66L\",\"dragging\":\"image_box_dragging__kFgpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"webcamController\":\"webcam_controller_webcamController__35AnZ\",\"showWebcamController\":\"webcam_controller_showWebcamController__2iWHF\",\"hideWebcamController\":\"webcam_controller_hideWebcamController__2LnrF\",\"switch\":\"webcam_controller_switch__36sPo\",\"slider\":\"webcam_controller_slider__3CQ-N\",\"round\":\"webcam_controller_round__dJusM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryEggShell\":\"#ece8e4\",\"primaryBlack\":\"black\",\"input\":\"message_box_input__2crgd\",\"meta\":\"message_box_meta__qosZi\",\"alt\":\"message_box_alt__zv3us\",\"dragging\":\"message_box_dragging__1aN69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryBlueDark\":\"#004d8b\",\"primaryWhite\":\"white\",\"header\":\"header_header__v9FKw\",\"headerText\":\"header_headerText__351ni\",\"logoutBtn\":\"header_logoutBtn__tmyLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryEggShell\":\"#ece8e4\",\"appContainer\":\"app_appContainer__1KyrA\",\"loginComponent\":\"app_loginComponent__3Oz8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryWhite\":\"white\",\"board\":\"board_board__PF3JZ\",\"motionContainer\":\"board_motionContainer__2YCn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBox\":\"game_box_gameBox__33wI0\"};","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport styles from './header.module.css';\n\nconst Header = ({ authService }) => {\n    const navigate = useNavigate();\n\n    const onLogout = () => {\n        authService //\n            .logout() //\n            .then(() => {\n                navigate('/');\n            });\n    };\n\n    return (\n        <header className={styles.header}>\n            <h1 className={styles.headerText}>RealtimeBoard</h1>\n            <button className={styles.logoutBtn} onClick={onLogout}>\n                sign out\n            </button>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport styles from './login.module.css';\n\nconst Login = ({ authService }) => {\n    const navigate = useNavigate();\n\n    const onLogin = (e) => {\n        authService //\n            .login(e.target.dataset.provider) //\n            .then((result) => {\n                navigate('/board', {\n                    state: { id: result.user.uid },\n                });\n            });\n    };\n\n    return (\n        <div className={styles.loginBox}>\n            <h1 className={styles.loginTitle}>LOGIN</h1>\n            <section className={styles.loginBtns}>\n                <button\n                    className={styles.loginBtn}\n                    data-provider=\"google\"\n                    onClick={onLogin}\n                >\n                    <i className={`fab fa-google ${styles.loginIcon}`}></i>\n                </button>\n                <button\n                    className={styles.loginBtn}\n                    data-provider=\"twitter\"\n                    onClick={onLogin}\n                >\n                    <i className={`fab fa-twitter ${styles.loginIcon}`}></i>\n                </button>\n                <button\n                    className={styles.loginBtn}\n                    data-provider=\"github\"\n                    onClick={onLogin}\n                >\n                    <i className={`fab fa-github ${styles.loginIcon}`}></i>\n                </button>\n            </section>\n        </div>\n    );\n};\n\nexport default Login;\n","// item types\nexport const BOARD = 'BOARD';\nexport const MESSAGE_BOX = 'MESSAGE_BOX';\nexport const IMAGE_BOX = 'IMAGE_BOX';\nexport const WEBCAM_BOX = 'WEBCAM_BOX';\nexport const GAME_BOX = 'GAME_BOX';\n\n// game titles\nexport const RUMMIKUB = 'RUMMIKUB';\nexport const DRAWANDGUESS = 'DRAWANDGUESS';\nexport const SHELLSHOCKERS = 'SHELLSHOCKERS';\n\nexport const gameLinks = {\n    RUMMIKUB:\n        'https://html5.gamedistribution.com/6bf29e0982a64f898a81c3f3612aba26/',\n    DRAWANDGUESS: 'https://skribbl.io/',\n    SHELLSHOCKERS: 'https://shellshock.io/',\n};\n\n/**\n * TODO\n * post css selectors by pressed key.\n * Install postcss-constants plugin and export it\n */\n// module.exports = {\n//     cursors: {\n//         Meta: 'meta',\n//         Alt: 'alt',\n//         m: 'addMessageBox',\n//         i: 'addImageBox',\n//         d: 'addDrawingBox',\n//         w: 'addWebcamBox',\n//         g: 'addGameBox',\n//     },\n// };\n","import { MESSAGE_BOX } from 'common/constants';\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './message_box.module.css';\nimport Draggable from 'react-draggable';\n// ~cursors: '../../common/constant.js';\n\nconst cursorStyle = {\n    Meta: styles.meta,\n    Alt: styles.alt,\n    // m: styles.addMessageBox,\n    // i: styles.addImageBox,\n    // d: styles.addDrawingBox,\n    // w: styles.addWebcamBox,\n    // g: styles.addGameBox,\n};\n\nconst MessageBox = ({\n    pressedKey,\n    message,\n    onMessageClick,\n    onMessageChange,\n}) => {\n    const inputRef = useRef();\n    const nodeRef = useRef();\n    const [itemType, setItemType] = useState(MESSAGE_BOX);\n    const [mouseEnter, setMouseEnter] = useState(false);\n    const [dragging, setDragging] = useState(false);\n\n    useEffect(() => {\n        inputRef.current.style.height = 'auto';\n        inputRef.current.style.height = inputRef.current.scrollHeight + 'px';\n    }, [message]);\n\n    return (\n        <Draggable\n            nodeRef={nodeRef}\n            axis=\"both\"\n            bounds=\"parent\"\n            position={{ x: 0, y: 0 }}\n            scale={1}\n            /**\n             * TODO\n             * Mutual exclusion related to the location of the item can be occured on the board.\n             * use the onStart below.\n             */\n            onStart={() => {\n                if (pressedKey === 'Alt') {\n                    setDragging(true); //\n                    return true;\n                } else return false;\n            }}\n            onStop={(e, data) => {\n                setDragging(false);\n                onMessageChange(message.id, null, data.x, data.y);\n            }}\n        >\n            <textarea\n                ref={inputRef}\n                key={message.id}\n                id={message.id}\n                className={`${styles.input} ${\n                    mouseEnter && pressedKey\n                        ? dragging\n                            ? styles.dragging\n                            : cursorStyle[pressedKey]\n                        : styles.autoCursor\n                }`}\n                type=\"text\"\n                value={message.text}\n                maxLength=\"50\"\n                style={{\n                    top: message.y,\n                    left: message.x,\n                }}\n                onClick={(e) => {\n                    itemType && onMessageClick(e, itemType);\n                }}\n                onInput={(e) => {\n                    onMessageChange(e.target.id, e.target.value);\n                    e.target.style.height = 'auto';\n                    e.target.style.height = e.target.scrollHeight + 'px';\n                }}\n                onMouseEnter={() => {\n                    setMouseEnter(true);\n                }}\n                onMouseLeave={() => {\n                    setMouseEnter(false);\n                }}\n                onKeyDown={(e) => {\n                    e.stopPropagation();\n                }}\n                onKeyPress={(e) => {\n                    e.stopPropagation();\n                }}\n            />\n        </Draggable>\n    );\n};\n\nexport default MessageBox;\n","import { IMAGE_BOX } from 'common/constants';\nimport React, { useState, useRef } from 'react';\nimport styles from './image_box.module.css';\nimport Draggable from 'react-draggable';\n\nconst cursorStyle = {\n    Meta: styles.meta,\n    Alt: styles.alt,\n};\n\nconst ImageBox = ({ pressedKey, img, onImageClick, onImageChange }) => {\n    const imgRef = useRef();\n    const nodeRef = useRef();\n    const [itemType, setItemType] = useState(IMAGE_BOX);\n    const [mouseEnter, setMouseEnter] = useState(false);\n    const [dragging, setDragging] = useState(false);\n\n    return (\n        <Draggable\n            nodeRef={nodeRef}\n            axis=\"both\"\n            bounds=\"parent\"\n            position={{ x: 0, y: 0 }}\n            scale={1}\n            /**\n             * TODO\n             * Mutual exclusion related to the location of the item can be occured on the board.\n             * use the onStart below.\n             */\n            onStart={() => {\n                if (pressedKey === 'Alt') {\n                    setDragging(true); //\n                    return true;\n                } else return false;\n            }}\n            onStop={(e, data) => {\n                setDragging(false);\n                onImageChange(img.id, data.x, data.y);\n            }}\n        >\n            <div\n                ref={imgRef}\n                className={`${styles.imgWrapper} ${\n                    mouseEnter && pressedKey\n                        ? dragging\n                            ? styles.dragging\n                            : cursorStyle[pressedKey]\n                        : styles.autoCursor\n                }`}\n                style={{\n                    top: img.y,\n                    left: img.x,\n                }}\n                onClick={(e) => {\n                    itemType && onImageClick(e, itemType);\n                }}\n                onMouseEnter={() => {\n                    setMouseEnter(true);\n                }}\n                onMouseLeave={() => {\n                    setMouseEnter(false);\n                }}\n            >\n                <img\n                    id={img.id}\n                    className={styles.img}\n                    src={img.fileUrl}\n                    alt=\"사진\"\n                    draggable=\"false\"\n                />\n            </div>\n        </Draggable>\n    );\n};\n\nexport default ImageBox;\n","/**\n * TODO\n * Object.freeze()\n */\nexport const itemTemplate = {\n    MESSAGE_BOX: {\n        id: null,\n        userId: null,\n        x: null,\n        y: null,\n        text: null,\n    },\n    IMAGE_BOX: {\n        id: null,\n        userId: null,\n        x: null,\n        y: null,\n        fileUrl: null,\n        height: null,\n        width: null,\n    },\n    WEBCAM_BOX: {\n        id: null,\n        userId: null,\n        x: null,\n        y: null,\n        playing: false,\n    },\n    GAME_BOX: {\n        id: null,\n        userId: null,\n        x: null,\n        y: null,\n        game: null,\n    },\n};\n","import React from 'react';\nimport styles from './webcam_controller.module.css';\n\nconst WebcamController = ({ camOn, mouseEnter, changeCamState }) => (\n    <div\n        className={`${styles.webcamController} ${\n            mouseEnter\n                ? styles.showWebcamController\n                : styles.hideWebcamController\n        }`}\n    >\n        <label className={styles.switch}>\n            <input\n                type=\"checkbox\"\n                onClick={() => {\n                    if (camOn === true) {\n                        changeCamState(false);\n                    } else {\n                        changeCamState(true);\n                    }\n                }}\n            />\n            <span className={`${styles.slider} ${styles.round}`}></span>\n        </label>\n    </div>\n);\n\nexport default WebcamController;\n","import { WEBCAM_BOX } from 'common/constants';\nimport WebcamController from 'components/webcam_controller/webcam_controller';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Draggable from 'react-draggable';\nimport Webcam from 'react-webcam';\nimport styles from './webcam_box.module.css';\n\nconst cursorStyle = {\n    Meta: styles.meta,\n    Alt: styles.alt,\n};\n\nconst WebcamBox = ({\n    pressedKey,\n    userId,\n    webcam,\n    onWebcamClick,\n    onWebcamChange,\n}) => {\n    const nodeRef = useRef();\n    const [deviceId, setDeviceId] = useState(null);\n    const [itemType, setItemType] = useState(WEBCAM_BOX);\n    const [mouseEnter, setMouseEnter] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const [camOn, setCamOn] = useState(false);\n\n    useEffect(() => {\n        handleWebcamChange(false);\n    }, []);\n\n    useEffect(() => {\n        navigator.mediaDevices.enumerateDevices().then(handleDevice);\n    }, []);\n\n    const handleWebcamChange = (isPlaying) => {\n        setCamOn(isPlaying);\n        onWebcamChange(webcam.id, null, null, isPlaying);\n    };\n\n    const handleDevice = (mediaDevices) => {\n        webcam.userId === userId\n            ? mediaDevices.forEach(({ kind, deviceId }) => {\n                  if (kind === 'videoinput') {\n                      setDeviceId(deviceId);\n                  }\n              })\n            : setDeviceId(null);\n        console.log('deviceId' + deviceId);\n    };\n\n    return (\n        <Draggable\n            nodeRef={nodeRef}\n            axis=\"both\"\n            bounds=\"parent\"\n            position={{ x: 0, y: 0 }}\n            scale={1}\n            /**\n             * TODO\n             * Mutual exclusion related to the location of the item can be occured on the board.\n             * use the onStart below.\n             */\n            onStart={() => {\n                if (pressedKey === 'Alt') {\n                    setDragging(true); //\n                    return true;\n                } else return false;\n            }}\n            onStop={(e, data) => {\n                setDragging(false);\n                onWebcamChange(webcam.id, data.x, data.y);\n            }}\n        >\n            <div\n                className={`${styles.webcamAbsolute} ${\n                    mouseEnter && pressedKey\n                        ? dragging\n                            ? styles.dragging\n                            : cursorStyle[pressedKey]\n                        : styles.autoCursor\n                }`}\n                style={{\n                    top: webcam.y,\n                    left: webcam.x,\n                }}\n                onClick={(e) => {\n                    itemType && onWebcamClick(e, itemType);\n                }}\n                onMouseEnter={() => {\n                    setMouseEnter(true);\n                }}\n                onMouseLeave={() => {\n                    setMouseEnter(false);\n                }}\n            >\n                <div className={styles.webcamRelative}>\n                    {/**\n                     * WebcamControler appears when mouse over && user own.\n                     */}\n                    {userId === webcam.userId && (\n                        <WebcamController\n                            camOn={camOn}\n                            mouseEnter={mouseEnter}\n                            changeCamState={handleWebcamChange}\n                        />\n                    )}\n                    {webcam.playing && (\n                        <Webcam\n                            id={webcam.id}\n                            className={styles.webcam}\n                            mirrored={true}\n                            screenshotQuality={1}\n                            /**\n                             * Set audio true only when the earphone is connected.\n                             */\n                            audio={false}\n                            // audioConstraints={}\n                            videoConstraints={{\n                                width: 200,\n                                height: 200,\n                                deviceId,\n                                // facingMode: \"user\" // front camera on mobile\n                            }}\n                        />\n                    )}\n                </div>\n            </div>\n        </Draggable>\n    );\n};\n\nexport default WebcamBox;\n","export default __webpack_public_path__ + \"static/media/rummikub.cd9ad04e.png\";","export default __webpack_public_path__ + \"static/media/drawnguess.3a392079.png\";","export default __webpack_public_path__ + \"static/media/shellshockers.569c1139.png\";","import React from 'react';\nimport styles from './game_options.module.css';\nimport imgRummikub from '../../images/rummikub.png';\nimport imgDrawnGuess from '../../images/drawnguess.png';\nimport imgShellShockers from '../../images/shellshockers.png';\nimport GameLinks, {\n    DRAWANDGUESS,\n    RUMMIKUB,\n    SHELLSHOCKERS,\n} from '../../common/constants.js';\n\nconst GameOptions = ({ getSelectedGame }) => {\n    return (\n        <div\n            className={styles.modal}\n            onClick={(e) => {\n                getSelectedGame(null);\n            }}\n        >\n            <div className={styles.dialog}>\n                <ul className={styles.options}>\n                    <li className={styles.game}>\n                        <span className={styles.gameTitle}>Rummikub</span>\n                        <img\n                            id={RUMMIKUB}\n                            className={styles.gameImg}\n                            src={imgRummikub}\n                            alt=\"\"\n                            onClick={(e) => {\n                                getSelectedGame(e.target.id);\n                                e.stopPropagation();\n                            }}\n                        />\n                    </li>\n                    <li className={styles.game}>\n                        <span className={styles.gameTitle}>\n                            Drawing&Guessing\n                        </span>\n                        <img\n                            id={DRAWANDGUESS}\n                            className={styles.gameImg}\n                            src={imgDrawnGuess}\n                            alt=\"\"\n                            onClick={(e) => {\n                                getSelectedGame(e.target.id);\n                                e.stopPropagation();\n                            }}\n                        />\n                    </li>\n                    <li className={styles.game}>\n                        <span className={styles.gameTitle}>Shell Shockers</span>\n                        <img\n                            id={SHELLSHOCKERS}\n                            className={styles.gameImg}\n                            src={imgShellShockers}\n                            alt=\"\"\n                            onClick={(e) => {\n                                getSelectedGame(e.target.id);\n                                e.stopPropagation();\n                            }}\n                        />\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default GameOptions;\n","import { gameLinks } from 'common/constants';\nimport GameOptions from 'components/game_options/game_options';\nimport React, { useEffect, useState, useRef } from 'react';\nimport styles from './game_box.module.css';\n\nconst GameBox = ({ userId, pressedKey, game, onGameChange }) => {\n    const iframeRef = useRef();\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        if (!game.game && userId === game.userId) {\n            setModal(true);\n        }\n    }, [game.id]);\n\n    /**\n     * TODO\n     * responsive\n     */\n\n    return (\n        <>\n            {game.game ? (\n                <iframe\n                    ref={iframeRef}\n                    className={styles.gameBox}\n                    src={gameLinks[game.game]}\n                    // sandbox=\"\"\n                ></iframe>\n            ) : modal ? (\n                <GameOptions\n                    getSelectedGame={(selectedGame) => {\n                        onGameChange(game.id, selectedGame);\n                        setModal(false);\n                    }}\n                />\n            ) : (\n                <span>loadinig game...</span> // ---> expected\n            )}\n        </>\n    );\n};\n\nexport default GameBox;\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport MessageBox from '../message_box/message_box';\nimport ImageBox from 'components/image_box/image_box';\nimport styles from './board.module.css';\nimport { itemTemplate } from 'common/template';\nimport {\n    BOARD,\n    GAME_BOX,\n    IMAGE_BOX,\n    MESSAGE_BOX,\n    WEBCAM_BOX,\n} from 'common/constants';\nimport WebcamBox from 'components/webcam_box/webcam_box';\nimport GameBox from 'components/game_box/game_box';\n\nconst Board = ({ authService, database, imageUploader }) => {\n    const dndZoneRef = useRef();\n    const location = useLocation();\n    const [itemType, setItemType] = useState(BOARD);\n    const [currKey, setCurrKey] = useState(null);\n    const [userId, setUserId] = useState(location.state && location.state.id);\n    const [messages, setMessages] = useState({});\n    const [images, setImages] = useState({});\n    const [webcam, setWebcam] = useState({});\n    const [games, setGames] = useState({});\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const stopSync = authService //\n            .onAuthChange((user) => {\n                if (!user) {\n                    navigate('/');\n                } else {\n                    setUserId(user.uid);\n                    database.getMessage((messages) => {\n                        // setMessages((satate) => messages);\n                        setMessages(messages);\n                    });\n                    database.getImages((images) => {\n                        // setImages((state) => images);\n                        setImages(images);\n                    });\n                    database.getWebcam((webcam) => {\n                        // setWebcam((state) => webcam);\n                        setWebcam(webcam);\n                    });\n                    database.getGames((game) => {\n                        // setGames((state) => game);\n                        setGames(game);\n                    });\n                }\n            });\n        return () => {\n            stopSync();\n            // setMessages({});\n            // setImages({});\n        };\n    }, [userId, authService, database, navigate]);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n\n    const handleDragOver = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        addImageBox(e.dataTransfer.files[0], e.clientX, e.clientY);\n    }, []);\n\n    const setEventListeners = useCallback(() => {\n        // BUG\n        // sometimes dndZoneRef undefined\n        dndZoneRef.current.addEventListener('dragenter', handleDragEnter);\n        dndZoneRef.current.addEventListener('dragleave', handleDragLeave);\n        dndZoneRef.current.addEventListener('dragover', handleDragOver);\n        dndZoneRef.current.addEventListener('drop', handleDrop);\n\n        window.addEventListener('keydown', changeCurrKey);\n        window.addEventListener('keyup', changeCurrKey);\n    }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\n\n    const removeEventListeners = useCallback(() => {\n        dndZoneRef.current.removeEventListener('dragenter', handleDragEnter);\n        dndZoneRef.current.removeEventListener('dragleave', handleDragLeave);\n        dndZoneRef.current.removeEventListener('dragover', handleDragOver);\n        dndZoneRef.current.removeEventListener('drop', handleDrop);\n\n        window.addEventListener('keydown', changeCurrKey);\n        window.addEventListener('keyup', changeCurrKey);\n    }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\n\n    // Handle drag and drop\n    useEffect(() => {\n        setEventListeners();\n        return () => {\n            // removeEventListeners();\n        };\n    }, [setEventListeners, removeEventListeners]);\n\n    const changeCurrKey = (e) => {\n        if (e.type === 'keydown') {\n            console.log(e.key);\n            setCurrKey(e.key);\n        }\n        if (e.type === 'keyup') {\n            setCurrKey(null);\n        }\n    };\n\n    /**\n     * Event Delegation on Board\n     * ⬇️\n     */\n\n    /**\n     * @param clickEvent - Used to get coordinates. Don't use it for type checking.\n     * @param itemType - Used to check item type when deleting it.\n     */\n    const handleBoardClick = useCallback((clickEvent, itemType) => {\n        if (!itemType) return;\n\n        /**\n         * @currKey\n         * Alt -> move clicked item\n         * Meta -> delete clicked item\n         * m -> create MessageBox\n         * i -> create ImageBox\n         * d -> create DrawingBox\n         * w -> create WebcamBox\n         * v -> create VideoBox ---> expected\n         * g -> create GameBox\n         */\n\n        /**\n         * BUG\n         * If the keyboard language is not English,\n         * The code below is ignored\n         */\n        switch (currKey) {\n            case 'm':\n                addMessageBox(clickEvent.clientX, clickEvent.clientY);\n                break;\n            case 'i':\n                addImageBox(); // ---> expected: uploading a picture using a widget\n                break;\n            case 'w':\n                addWebcamBox(clickEvent.clientX, clickEvent.clientY);\n                break;\n            case 'g':\n                addGameBox(clickEvent.clientX, clickEvent.clientY);\n                break;\n            case 'Meta':\n                if (itemType === MESSAGE_BOX) {\n                    removeMessageBox(clickEvent.target.id);\n                }\n                if (itemType === IMAGE_BOX) {\n                    removeImageBox(clickEvent.target.id);\n                }\n                if (itemType === WEBCAM_BOX) {\n                    removeWebcamBox(clickEvent.target.id);\n                }\n                break;\n        }\n    });\n\n    /**\n     * MessageBox\n     * ⬇️\n     */\n\n    const addMessageBox = (x, y) => {\n        const id = Date.now();\n        const rect = dndZoneRef.current.getBoundingClientRect();\n        const template = { ...itemTemplate[MESSAGE_BOX] };\n        template.id = id;\n        template.userId = userId;\n        template.x = x - rect.left;\n        template.y = y - rect.top;\n        template.text = '';\n        setMessages((messages) => {\n            const updated = { ...messages };\n            updated[id] = template;\n            return updated;\n        });\n        database.saveMessage(template);\n    };\n\n    const removeMessageBox = useCallback((messageId) => {\n        setMessages((messages) => {\n            const updated = { ...messages };\n            delete updated[messageId];\n            return updated;\n        });\n        database.removeMessage(messageId);\n    });\n\n    const updateMessageBox = useCallback((messageId, text, deltaX, deltaY) => {\n        const x = messages[messageId].x + deltaX;\n        const y = messages[messageId].y + deltaY;\n        const changedMessage =\n            deltaX || deltaY\n                ? { ...messages[messageId], x, y }\n                : { ...messages[messageId], text };\n        setMessages((messages) => {\n            const updated = { ...messages };\n            updated[messageId] = changedMessage;\n            return updated;\n        });\n        database.saveMessage(changedMessage);\n    });\n\n    /**\n     * ImageBox\n     * ⬇️\n     */\n\n    const addImageBox = async (file, x, y) => {\n        try {\n            // TODO\n            // !file, show image upload widget\n            if (!file) return;\n            const uploaded = await imageUploader.upload(file);\n            const id = Date.now();\n            const rect = dndZoneRef.current.getBoundingClientRect();\n            const template = { ...itemTemplate[IMAGE_BOX] };\n            template.id = id;\n            template.userId = userId;\n            template.x = x - rect.left;\n            template.y = y - rect.top;\n            template.fileUrl = uploaded.url\n                ? uploaded.url\n                : '불러올 수 없는 이미지입니다!';\n            setImages((images) => {\n                const updated = { ...images };\n                updated[id] = template;\n                return updated;\n            });\n            database.saveImage(template);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    const removeImageBox = (imageId) => {\n        setImages((images) => {\n            const updated = { ...images };\n            delete updated[imageId];\n            return updated;\n        });\n        database.removeImage(imageId);\n    };\n\n    const updateImageBox = (imageId, deltaX, deltaY) => {\n        const x = images[imageId].x + deltaX;\n        const y = images[imageId].y + deltaY;\n        const updatedImage = { ...images[imageId], x, y };\n        setImages((images) => {\n            const updated = { ...images };\n            updated[imageId] = updatedImage;\n            return updated;\n        });\n        database.saveImage(updatedImage);\n    };\n\n    /**\n     * WebcamBox\n     * ⬇️\n     */\n    const addWebcamBox = (x, y) => {\n        if (Object.keys(webcam).length > 0) {\n            window.alert('웹캠은 한 개만 소유할 수 있습니다!');\n            return;\n        }\n        const id = Date.now();\n        const rect = dndZoneRef.current.getBoundingClientRect();\n        const template = { ...itemTemplate[WEBCAM_BOX] };\n        template.id = id;\n        template.userId = userId;\n        template.x = x - rect.left;\n        template.y = y - rect.top;\n        setWebcam((webcam) => {\n            const updated = { ...webcam };\n            updated[id] = template;\n            return updated;\n        });\n        database.saveWebcam(template);\n    };\n\n    const removeWebcamBox = (webcamId) => {\n        setWebcam((webcam) => {\n            const updated = { ...webcam };\n            delete updated[webcamId];\n            return updated;\n        });\n        database.removeWebcam(webcamId);\n    };\n\n    const updateWebcam = (webcamId, deltaX, deltaY, playing) => {\n        let updatedWebcam;\n        if (deltaX || deltaY) {\n            const x = webcam[webcamId].x + deltaX;\n            const y = webcam[webcamId].y + deltaY;\n            updatedWebcam = { ...webcam[webcamId], x, y };\n        } else {\n            updatedWebcam = { ...webcam[webcamId], playing };\n        }\n        setWebcam((webcam) => {\n            const updated = { ...webcam };\n            updated[webcamId] = updatedWebcam;\n            return updated;\n        });\n        database.saveWebcam(updatedWebcam);\n    };\n\n    /**\n     * GameBox\n     * ⬇️\n     */\n    const addGameBox = () => {\n        /**\n         * TODO\n         * show loading spinner until game is selected\n         */\n\n        /**\n         * BUG\n         * window.alert will ignore keyup event.\n         * After closing the alert, click the board again, It appears that the pressed key is still active.\n         */\n        if (Object.keys(games).length > 0) {\n            window.alert('하나의 게임만 실행할 수 있습니다!'); // ----> expected to allow more games\n            return;\n        }\n        // const rect = dndZoneRef.current.getBoundingClientRect();\n        const id = Date.now();\n        const template = { ...itemTemplate[GAME_BOX] };\n        template.id = id;\n        template.userId = userId;\n        // template.x = x - rect.left;\n        // template.y = y - rect.top;\n        setGames((games) => {\n            const updated = { ...games };\n            updated[id] = template;\n            return updated;\n        });\n        database.saveGame(template);\n    };\n\n    const updateGame = (gameId, selectedGame) => {\n        if (!selectedGame) {\n            removeGame(gameId);\n            return;\n        }\n        const game = selectedGame;\n        const updatedGame = { ...games[gameId], game };\n        setGames((games) => {\n            const updated = { ...games };\n            updated[gameId] = updatedGame;\n            return updated;\n        });\n        database.saveGame(updatedGame);\n    };\n\n    const removeGame = (gameId) => {\n        setGames((games) => {\n            const updated = { ...games };\n            delete updated[gameId];\n            return updated;\n        });\n        database.removeGame(gameId);\n    };\n\n    return (\n        <div\n            ref={dndZoneRef}\n            className={styles.board}\n            onClick={(e) => handleBoardClick(e, itemType)}\n        >\n            {/**\n             * TODO\n             * All draggable items have <Draggable>\n             * Why not use DraggableItem wrapper.\n             *\n             */}\n            {Object.keys(messages).map((key) => (\n                <MessageBox\n                    key={key}\n                    pressedKey={currKey}\n                    message={messages[key]}\n                    onMessageClick={handleBoardClick}\n                    onMessageChange={updateMessageBox}\n                />\n            ))}\n            {Object.keys(images).map((key) => (\n                <ImageBox\n                    key={key}\n                    pressedKey={currKey}\n                    img={images[key]}\n                    onImageClick={handleBoardClick}\n                    onImageChange={updateImageBox}\n                />\n            ))}\n            {Object.keys(webcam).map((key) => (\n                <WebcamBox\n                    key={key}\n                    pressedKey={currKey}\n                    userId={userId}\n                    webcam={webcam[key]}\n                    onWebcamClick={handleBoardClick}\n                    onWebcamChange={updateWebcam}\n                />\n            ))}\n            {Object.keys(games).map((key) => (\n                <GameBox\n                    key={key}\n                    userId={userId}\n                    pressedKey={currKey}\n                    game={games[key]}\n                    onGameChange={updateGame}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Board;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport styles from './app.module.css';\nimport Header from './components/header/header';\nimport Login from './components/login/login';\nimport Board from './components/board/board';\n\nfunction App({ authService, database, imageUploader }) {\n    return (\n        <div className={styles.appContainer}>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={\n                            <>\n                                <div className={styles.loginComponent}>\n                                    <Login authService={authService} />\n                                </div>\n                            </>\n                        }\n                    />\n                    <Route\n                        path=\"/board\"\n                        element={\n                            <>\n                                <Header authService={authService} />\n                                <Board\n                                    authService={authService}\n                                    database={database}\n                                    imageUploader={imageUploader}\n                                />\n                            </>\n                        }\n                    />\n                </Routes>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\n","import { firebaseApp } from './firebase';\nimport {\n    getAuth,\n    signInWithPopup,\n    signOut,\n    GoogleAuthProvider,\n    TwitterAuthProvider,\n    GithubAuthProvider,\n    onAuthStateChanged,\n} from 'firebase/auth';\n\nclass AuthService {\n    constructor() {\n        this.auth = getAuth(firebaseApp);\n    }\n\n    login(providerName) {\n        const authProvider = this.getProvider(providerName);\n        if (!authProvider) {\n            window.alert('this is expected provider. please use another');\n            return;\n        }\n\n        return signInWithPopup(this.auth, new authProvider());\n    }\n\n    logout() {\n        return signOut(this.auth);\n    }\n\n    onAuthChange(onUserChange) {\n        return onAuthStateChanged(this.auth, onUserChange);\n    }\n\n    getProvider(providerName) {\n        switch (providerName) {\n            case 'google':\n                return GoogleAuthProvider;\n            case 'twitter':\n                return null;\n            // return TwitterAuthProvider;\n            case 'github':\n                return GithubAuthProvider;\n            default:\n                throw new Error(`not supported provider: ${providerName}`);\n        }\n    }\n}\n\nexport default AuthService;\n","import { firebaseApp } from './firebase';\nimport { getDatabase, ref, set, remove, onValue } from 'firebase/database';\n\n// TODO\n// login failed, userId null(BUG) -> handle login redirection\nclass Database {\n    constructor() {\n        this.db = getDatabase(firebaseApp);\n    }\n\n    saveMessage(message) {\n        set(ref(this.db, `messages/${message.id}`), message);\n    }\n\n    saveImage(image) {\n        set(ref(this.db, `images/${image.id}`), image);\n    }\n\n    saveWebcam(webcam) {\n        set(ref(this.db, `webcam/${webcam.id}`), webcam);\n    }\n\n    saveGame(game) {\n        set(ref(this.db, `games/${game.id}`), game);\n    }\n\n    getMessage(onUpdate) {\n        onValue(ref(this.db, `messages`), (snapshot) => {\n            const messages = snapshot.val();\n            messages ? onUpdate(messages) : onUpdate({});\n        });\n    }\n\n    getImages(onUpdate) {\n        onValue(ref(this.db, `images`), (snapshot) => {\n            const images = snapshot.val();\n            images ? onUpdate(images) : onUpdate({});\n        });\n    }\n\n    getWebcam(onUpdate) {\n        onValue(ref(this.db, `webcam`), (snapshot) => {\n            const webcam = snapshot.val();\n            webcam ? onUpdate(webcam) : onUpdate({});\n        });\n    }\n\n    getGames(onUpdate) {\n        onValue(ref(this.db, `games`), (snapshot) => {\n            const game = snapshot.val();\n            game ? onUpdate(game) : onUpdate({});\n        });\n    }\n\n    removeMessage(messageId) {\n        remove(ref(this.db, `messages/${messageId}`));\n    }\n\n    removeImage(ImageId) {\n        remove(ref(this.db, `images/${ImageId}`));\n    }\n\n    removeWebcam(webcamId) {\n        remove(ref(this.db, `webcam/${webcamId}`));\n    }\n\n    removeGame(gameId) {\n        remove(ref(this.db, `games/${gameId}`));\n    }\n}\n\nexport default Database;\n","class ImageUploader {\n    constructor(cloudName, presetName) {\n        this.cloudName = cloudName;\n        this.presetName = presetName;\n    }\n    async upload(file) {\n        const data = new FormData();\n        data.append('file', file);\n        data.append('upload_preset', this.presetName);\n        try {\n            const result = await fetch(\n                `https://api.cloudinary.com/v1_1/${this.cloudName}/image/upload`,\n                {\n                    method: 'POST',\n                    body: data,\n                }\n            );\n            return await result.json();\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n\nexport default ImageUploader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport AuthService from './service/auth_service';\nimport Database from './service/database';\nimport ImageUploader from 'service/image_uploader';\n\nconst authService = new AuthService();\nconst database = new Database();\nconst imageUploader = new ImageUploader(\n    process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n    process.env.REACT_APP_CLOUDINARY_PRESET_NAME\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App\n            authService={authService}\n            database={database}\n            imageUploader={imageUploader}\n        />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}